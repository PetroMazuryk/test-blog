{"version":3,"file":"static/js/55.eb4ed79d.chunk.js","mappings":"0OACA,EAAuB,oBAAvB,EAAmD,qBAAnD,EAAgF,qB,mBCoEhF,EA1Dc,WAAO,IAAD,QACZA,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAErBC,GAAWC,EAAAA,EAAAA,MAEjB,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,KAAM,aATNC,EADF,EACEA,SACAC,EAFF,EAEEA,aAEaC,EAJf,EAIEC,UAAaD,OAcf,OAAIZ,GACK,SAAC,KAAD,CAAUc,GAAG,OAGpB,UAACC,EAAA,EAAD,CAAOC,QAAS,CAAEC,KAAMC,GAAxB,WACE,SAACC,EAAA,EAAD,CAAYH,QAAS,CAAEC,KAAMC,GAAgBE,QAAQ,KAArD,yFAGA,kBAAMC,SAAUV,GAbH,SAAAW,GACfC,QAAQC,IAAIF,GACZnB,GAASsB,EAAAA,EAAAA,IAAUH,GACpB,IAUG,WACE,SAACI,EAAA,GAAD,gBACEC,UAAWT,EACXU,MAAM,QACNC,KAAK,QACLC,MAAOC,QAAO,UAACnB,EAAOL,aAAR,aAAC,EAAcyB,SAC7BC,WAAU,UAAErB,EAAOL,aAAT,aAAE,EAAcyB,SACtBtB,EAAS,QAAS,CAAEwB,SAAU,+EANpC,IAOEC,WAAS,MAEX,SAACT,EAAA,GAAD,gBACEC,UAAWT,EACXU,MAAM,WACNC,KAAK,WACLC,MAAOC,QAAO,UAACnB,EAAOJ,gBAAR,aAAC,EAAiBwB,SAChCC,WAAU,UAAErB,EAAOJ,gBAAT,aAAE,EAAiBwB,SACzBtB,EAAS,WAAY,CAAEwB,SAAU,qFANvC,IAOEC,WAAS,MAEX,SAACC,EAAA,EAAD,CAAQP,KAAK,SAASQ,KAAK,QAAQjB,QAAQ,YAAYe,WAAS,EAAhE,wBAMP,C","sources":["webpack://test-blog/./src/pages/Login/Login.module.scss?62e7","pages/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Login_root__Mv9xp\",\"field\":\"Login_field__HKrD-\",\"title\":\"Login_title__6eftw\"};","import Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport { Navigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\n\nimport styles from './Login.module.scss';\nimport { fetchAuth, selectIsAuth } from 'redux/slices/auth';\n\nconst Login = () => {\n  const isAuth = useSelector(selectIsAuth);\n\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n    mode: 'onChange',\n  });\n\n  const onSubmit = values => {\n    console.log(values);\n    dispatch(fetchAuth(values));\n  };\n\n  if (isAuth) {\n    return <Navigate to=\"/\" />;\n  }\n  return (\n    <Paper classes={{ root: styles.root }}>\n      <Typography classes={{ root: styles.title }} variant=\"h5\">\n        Вхід в аккаунт\n      </Typography>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <TextField\n          className={styles.field}\n          label=\"Email\"\n          type=\"email\"\n          error={Boolean(errors.email?.message)}\n          helperText={errors.email?.message}\n          {...register('email', { required: 'Вкажіть пошту' })}\n          fullWidth\n        />\n        <TextField\n          className={styles.field}\n          label=\"Password\"\n          type=\"password\"\n          error={Boolean(errors.password?.message)}\n          helperText={errors.password?.message}\n          {...register('password', { required: 'Вкажіть пароль' })}\n          fullWidth\n        />\n        <Button type=\"submit\" size=\"large\" variant=\"contained\" fullWidth>\n          Login\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Login;\n"],"names":["isAuth","useSelector","selectIsAuth","dispatch","useDispatch","useForm","defaultValues","email","password","mode","register","handleSubmit","errors","formState","to","Paper","classes","root","styles","Typography","variant","onSubmit","values","console","log","fetchAuth","TextField","className","label","type","error","Boolean","message","helperText","required","fullWidth","Button","size"],"sourceRoot":""}